/* @tailwind base; */
/* .react-navigable-list {
  @tailwind base;
} */

blockquote[class^='rnl-reset'],
dl[class^='rnl-reset'],
dd[class^='rnl-reset'],
h1[class^='rnl-reset'],
h2[class^='rnl-reset'],
h3[class^='rnl-reset'],
h4[class^='rnl-reset'],
h5[class^='rnl-reset'],
h6[class^='rnl-reset'],
hr[class^='rnl-reset'],
figure[class^='rnl-reset'],
p[class^='rnl-reset'],
pre[class^='rnl-reset'] {
  margin: 0;
}

button[class^='rnl-reset'] {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button[class^='rnl-reset']:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset[class^='rnl-reset'] {
  margin: 0;
  padding: 0;
}

ol[class^='rnl-reset'],
ul[class^='rnl-reset'] {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr[class^='rnl-reset'] {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img[class^='rnl-reset'] {
  border-style: solid;
}

textarea[class^='rnl-reset'] {
  resize: vertical;
}

input[class^='rnl-reset']::placeholder,
textarea[class^='rnl-reset']::placeholder {
  color: #a0aec0;
}

button[class^='rnl-reset'],
[role='button'] {
  cursor: pointer;
}

table[class^='rnl-reset'] {
  border-collapse: collapse;
}

h1[class^='rnl-reset'],
h2[class^='rnl-reset'],
h3[class^='rnl-reset'],
h4[class^='rnl-reset'],
h5[class^='rnl-reset'],
h6[class^='rnl-reset'] {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a[class^='rnl-reset'] {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button[class^='rnl-reset'],
input[class^='rnl-reset'],
optgroup[class^='rnl-reset'],
select[class^='rnl-reset'],
textarea[class^='rnl-reset'] {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre[class^='rnl-reset'],
code[class^='rnl-reset'],
kbd[class^='rnl-reset'],
samp[class^='rnl-reset'] {
  font-family: theme(
    'fontFamily.mono',
    SFMono-Regular,
    Menlo,
    Monaco,
    Consolas,
    'Liberation Mono',
    'Courier New',
    monospace
  );
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img[class^='rnl-reset'],
svg[class^='rnl-reset'],
video[class^='rnl-reset'],
canvas[class^='rnl-reset'],
audio[class^='rnl-reset'],
iframe[class^='rnl-reset'],
embed[class^='rnl-reset'],
object[class^='rnl-reset'] {
  display: block;
  vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img[class^='rnl-reset'],
video[class^='rnl-reset'] {
  max-width: 100%;
  height: auto;
}
@tailwind components;
@tailwind utilities;
